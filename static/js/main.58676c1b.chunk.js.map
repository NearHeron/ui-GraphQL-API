{"version":3,"sources":["components/theme.js","components/NavBar/NavBarComponent.js","components/Main/MainComponent.js","queries/query.js","containers/Main/MainContainer.js","components/Conference/ConferenceComponent.js","containers/ConferenceContainer/ConferenceContainer.js","App.js","index.js"],"names":["createMuiTheme","typography","useNextVariants","color","palette","type","primary","main","secondary","blue","error","red","contrastThreshold","tonalOffset","contrastText","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","NavBarComponent","classes","className","AppBar","position","Toolbar","variant","Typography","to","heroContent","backgroundColor","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardContent","MainComponent","conferences","Container","maxWidth","Grid","container","map","conference","item","key","id","xs","sm","md","Card","CardContent","gutterBottom","component","name","slogan","CardActions","startDate","endDate","locations","country","Button","size","CONFERENCES","gql","CONFERENCE","MainContainer","useQuery","loading","data","ConferenceComponent","ConferenceContainer","props","variables","match","params","console","log","client","ApolloClient","uri","cache","InMemoryCache","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58676c1b.chunk.js","sourcesContent":["import {createMuiTheme} from \"@material-ui/core\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport red from \"@material-ui/core/colors/red\";\n\nexport default createMuiTheme({\n  typography: {\n    useNextVariants: true,\n    color: '#fff',\n  },\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#E535AB'\n    },\n    secondary: blue,\n    error: red,\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n    contrastText: '#fff',\n  }\n})","import React from \"react\";\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n  }),\n);\n\nconst NavBarComponent = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <Typography variant=\"h6\" color=\"inherit\">\n            <Link to='/ui-graphql-api'>\n              UI GraphQL API\n            </Link>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default NavBarComponent","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Link} from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nconst MainComponent = ({conferences} = []) => {\n\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.cardGrid} maxWidth=\"md\">\n      <Grid container spacing={4}>\n        {conferences.map((conference) => (\n          <Grid item key={conference.id} xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n              <CardContent className={classes.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {conference.name}\n                </Typography>\n                <Typography>\n                  {conference.slogan}\n                </Typography>\n              </CardContent>\n              <CardActions>\n                {`${conference.startDate === conference.endDate? conference.startDate: `${conference.startDate} - ${conference.endDate}`}  ${conference.locations[0]? conference.locations[0].country.name: \"\"}`}\n              </CardActions>\n              <Button size=\"small\" color=\"primary\">\n                <Link to={`/ui-graphql-api/conference/${conference.id}`}>View</Link>\n              </Button>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  )\n};\n\nexport default MainComponent;","import {gql} from \"@apollo/client\";\n\nexport const CONFERENCES = gql`\n  query GetConferences {\n    conferences{\n      id\n      name\n      slogan\n      startDate\n      endDate\n      allSpeakers {\n        name\n      }\n      locations {\n        country {\n          name\n    }\n  }\n    }\n  }\n`;\n\nexport const CONFERENCE = gql`\n  query getConference($id: ID!) {\n    conference(id: $id) {\n      id\n      year\n    }\n  }\n`;\n","import React from \"react\";\nimport MainComponent from \"../../components/Main/MainComponent\";\nimport {CONFERENCES} from \"../../queries/query\";\nimport {useQuery} from \"@apollo/client\";\n\nconst MainContainer = () => {\n  const {loading, data} = useQuery(CONFERENCES);\n\n  return (\n    loading? <p>loading...</p>: <MainComponent conferences={data.conferences}/>\n  )\n};\n\nexport default MainContainer;","import React from \"react\";\n\nconst ConferenceComponent = () => {\n\n  return (\n    <h1>It working</h1>\n  )\n};\n\nexport default ConferenceComponent","import React from \"react\";\nimport {CONFERENCE} from \"../../queries/query\";\nimport ConferenceComponent from \"../../components/Conference/ConferenceComponent\";\nimport {useQuery} from \"@apollo/client\";\n\nconst ConferenceContainer = (props) => {\n\n  const { loading,  data } = useQuery(CONFERENCE, {\n    variables: { id: `${props.match.params.id}` },\n  });\n\n  console.log(data)\n  return (\n    <ConferenceComponent />\n  )\n}\n\nexport default ConferenceContainer","import React from 'react';\nimport {ApolloClient, ApolloProvider, InMemoryCache} from \"@apollo/client\";\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\nimport theme from \"./components/theme\";\nimport NavBarComponent from \"./components/NavBar/NavBarComponent\";\nimport MainContainer from \"./containers/Main/MainContainer\";\nimport ConferenceContainer from \"./containers/ConferenceContainer/ConferenceContainer\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nconst client = new ApolloClient({\n  uri: \"https://api.react-finland.fi/graphql\",\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <MuiThemeProvider theme={theme}>\n        <Router>\n          <div className=\"App\">\n            <NavBarComponent/>\n            <Switch>\n              <Route path='/ui-graphql-api' component={MainContainer} exact/>\n              <Route path='/ui-graphql-api/conference/:id' component={ConferenceContainer} />\n            </Switch>\n          </div>\n        </Router>\n\n      </MuiThemeProvider>\n    </ApolloProvider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}